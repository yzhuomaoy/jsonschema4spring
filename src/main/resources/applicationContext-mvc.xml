<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd   
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd   
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
		
	<context:component-scan base-package="org.tiger" />
	
	<bean id="schemaStore" class="org.tiger.json.JsonSchemaStore">
		<constructor-arg value="jsonschema" />
	</bean>
    
    <bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
    
    <!-- Ensure that the method toString() is used instead of name() for enums -->
	<!-- This allow us to customize the output when needed -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonObjectMapper" />
		<property name="targetMethod" value="enable" />
		<property name="arguments">
			<value type="com.fasterxml.jackson.databind.SerializationFeature">WRITE_ENUMS_USING_TO_STRING</value>
		</property>
	</bean>
	
	<bean id="webJsonConverter" class="org.tiger.json.CustomizedMappingJackson2HttpMessageConverter" >
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg value="text" />
					<constructor-arg value="plain" />
					<constructor-arg value="#{T(java.nio.charset.Charset).forName('UTF-8')}"/>
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg value="application" />
					<constructor-arg value="json" />
					<constructor-arg value="#{T(java.nio.charset.Charset).forName('UTF-8')}"/>
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg value="application"/>
					<constructor-arg value="json-patch+json" />
					<constructor-arg value="#{T(java.nio.charset.Charset).forName('UTF-8')}"/>
				</bean>
			</list>
		</property>
		<property name="schemaStore" ref="schemaStore" />
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="favorPathExtension" value="false"></property>
		<property name="favorParameter" value="true"></property>
		<property name="parameterName" value="responseType"></property>        
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
				<entry key="text/plain" value="text/plain" />
			</map>
		</property>	
		<property name="defaultContentType" value="application/json" />
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
				</bean>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="webJsonConverter" />
			</list>
		</property>
	</bean>
    
	
	<bean class="org.tiger.annotation.CustomizedRequestMappingHandlerMapping">
		<constructor-arg ref="schemaStore" />
		<property name="useTrailingSlashMatch" value="false" />
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />
</beans>	    
